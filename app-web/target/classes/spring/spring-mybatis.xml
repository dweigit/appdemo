<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-autowire="byName" default-lazy-init="false">

	<!-- 引入属性文件，方法1 -->
	 <context:property-placeholder location="classpath:dbconfig.properties" />

	<!-- 引入属性文件，方法2 -->
	<!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
		<!--<property name="locations">-->
			<!--<list>-->
				<!--<value>classpath:dbconfig.properties</value>-->
			<!--</list>-->
		<!--</property>-->
	<!--</bean>-->

	<!-- Druid配置数据源 -->
	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driverClassName}" />
		<property name="filters" value="${filters}" />

		<property name="maxActive" value="${maxActive}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="minIdle" value="${minIdle}" />

		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
		<property name="removeAbandoned" value="${removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="${logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>

	<!-- DHCP配置数据源 -->
	<!--<bean id="dhcpDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
		<!--<property name="driverClassName" value="${driverClassName}" />-->
		<!--<property name="url" value="${url}" />-->
		<!--<property name="username" value="${username}" />-->
		<!--<property name="password" value="${password}" />-->
	<!--</bean>-->

	<!-- JDBC配置数据源 -->
	<!--<bean id="jdbcDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
		<!--<property name="driverClassName" value="${driverClassName}" />-->
		<!--<property name="url" value="${url}" />-->
		<!--<property name="username" value="${username}" />-->
		<!--<property name="password" value="${password}" />-->
	<!--</bean>-->

	<!-- myBatis文件 -->
	<bean id="xxsqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="druidDataSource" />
		<property name="mapperLocations" value="classpath:sqlmap/*-sqlmap.xml" />
		<property name="typeAliasesPackage" value="com.xsoft.appdemo.model" />
        <!--分页插件配置-->
		<property name="plugins">
			<list>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
						</value>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="jdbcDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.dwei.springmvc_demo_mybatis.model" />
	</bean>-->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xsoft.appdemo.dao" />
		<property name="sqlSessionFactoryBeanName" value="xxsqlSessionFactory" />
	</bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="xxsqlSessionFactory" />
    </bean>

    <!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="druidDataSource" />
	</bean>

</beans>