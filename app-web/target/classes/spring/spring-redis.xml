<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd"
       default-autowire="byName" default-lazy-init="false">

    <context:property-placeholder location="classpath:redis.properties" />

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>

        <property name="maxWaitMillis" value="-1"></property>
        <property name="minEvictableIdleTimeMillis" value="300000"></property>
        <property name="numTestsPerEvictionRun" value="3"></property>
        <property name="timeBetweenEvictionRunsMillis" value="60000"></property>
    </bean>

    <!--Redis Sentinel是Redis官方提供的集群管理工具，使用一个或多个sentinel和Redis的master/slave可以组成一个群集，可以检测master实例是否存活，并在master实例发生故障时，将slave提升为master，并在老的master重新加入到sentinel的群集之后，会被重新配置，作为新master的slave。-->
    <!--<bean id="sentinelConfig" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">-->
        <!--<constructor-arg name="master" value="mymaster"/>-->
        <!--<constructor-arg name="sentinelHostAndPorts">-->
            <!--<set>-->
                <!--<value>192.168.88.151:6379</value>-->
                <!--<value>192.168.88.152:6379</value>-->
                <!--<value>192.168.88.153:6379</value>-->
            <!--</set>-->
        <!--</constructor-arg>-->
    <!--</bean>-->


    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="jedisPoolConfig"></property>
        <property name="hostName" value="${redis.host}"></property>
        <property name="port" value="${redis.port}"></property>
        <property name="password" value="${redis.pass}"></property>
        <property name="timeout" value="15000"></property>
        <property name="usePool" value="true"></property>
    </bean>

    <bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"></property>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

</beans>